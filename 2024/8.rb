# frozen_string_literal: true

input = DATA.read
input = input.lines.map { _1.strip.chars }

$y_max = input.first.size
$x_max = input.size

def find_antennas(input)
  points = {}

  input.each_with_index do |row, y|
    row.each_with_index do |col, x|
      next if col == "."

      points[col] = [] if points[col].nil?
      points[col] << [y, x]
    end
  end

  points
end

def slope(point_a, point_b)
  [
    point_a.first - point_b.first,
    point_a.last - point_b.last
  ]
end

# Part 1
def find_antinodes(point_a, point_b)
  rise, run = slope(point_a, point_b)

  [
    [point_a.first + rise, point_a.last + run],
    [point_b.first - rise, point_b.last - run]
  ]
end

# Part 2
def find_antinode_lines(point_a, point_b)
  rise, run = slope(point_a, point_b)

  [point_a, point_b].tap do |line|
    line << point_a = [point_a.first + rise, point_a.last + run] while in_bounds?(point_a)
    line << point_b = [point_b.first - rise, point_b.last - run] while in_bounds?(point_b)
  end
end

def in_bounds?(point)
  point.first >= 0 &&
    point.first < $y_max &&
    point.last >= 0 &&
    point.last < $x_max
end

def run(points, &block)
  points.transform_values { |freq| freq.combination(2).flat_map(&block) }
        .values
        .flatten(1)
        .uniq
        .count { in_bounds? _1 }
end

antennas = find_antennas(input)
puts run(antennas) { |point_a, point_b| find_antinodes point_a, point_b } # 390
puts run(antennas) { |point_a, point_b| find_antinode_lines point_a, point_b } # 1246

__END__
.......b..........................................
.A....s...................3V...P....I.............
..s.........b........v.P..................z.......
.p..........A..uS.l...........................8...
.......B...i...................z...............8..
.............s..........E.......m........J........
.c............L...k.P........E....................
........b.....................a...................
.m.s.....V....l....u...S..........O.............8.
...B..............L..1Dm...S....u.z...............
......A......3...e....f..a........................
...................3.......I...............6.....8
....v..l...................5..........I...........
...v........k.0......5..P....z....................
.....A....................VJ...T.......D..........
.i..B..............L......W...........5...........
...........p.....k............u.D..IX.............
...c.......k..........VG.D.........W..............
......i.c.....G....W........5....jJ...............
...........l........................J....E........
..........E..G..t.................................
........i........h.................a....O........C
......K..t.L........m...W......0..j...........2...
................1.......j..0.......gC..M....2.....
.........K............3...........M........U...g..
..K.......p.....G.c...................q.....6.T...
..................1h...............M..C...6f......
............tj..h.......................f.........
....................Y.h............O.........6.C..
...........K....X....t......MfY..O....Q...........
..............p.......0.................g.........
..............n...............g...................
....a..................................wQq.H.2....
.o..................................v.....H..7.2..
........N1..........F.......q....Yw.........H.....
...n..d....H..F....................Y.......e......
...................d..............................
..y....N.....d..Z......9..........................
.N......T.n................497....................
.y....o....Z.........x.............T.............Q
.......y...X.........9..................7....Q....
...............F......................e...........
.n...............F.Z..........................e...
......................9U..............w...........
o.......y...................4.U...................
..x..............X.........w..4.............7.....
.......oZ...d.....................x...............
.............qU...................................
..................................................
..................................................
